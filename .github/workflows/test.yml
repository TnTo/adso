name: Tests
on: push
jobs:
  base_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nox: ["black", "lint", "mypy"]
    name: Base tests
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: adso-test
          python-version: "3.8"
          architecture: x64
          channels: conda-forge, defaults
      - run: conda install nox
      - run: nox -s ${{ matrix.nox }} --verbose
  conda_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.8", "3.7"]
    name: Python ${{ matrix.python-version }} - Testing with conda
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: adso-test
          python-version: ${{ matrix.python-version }}
          architecture: x64
          channels: conda-forge, defaults
      - run: conda install nox
      - run: nox -s test -p ${{ matrix.python-version }} --verbose
  poetry_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.9", "3.8", "3.7"]
    name: Python ${{ matrix.python-version }} - Testing with pip
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install nox
      - run: nox -s pip_test -p ${{ matrix.python-version }} --verbose
  coverage:
    runs-on: ubuntu-latest
    name: Coverage
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: adso-test
          python-version: "3.8"
          architecture: x64
          channels: conda-forge, defaults
      - run: conda install nox
      - run: nox -s coverage --verbose
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
