name: Tests
on: push
jobs:
  base_tests:
    runs-on: ubuntu-latest
    name: Base tests
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-miniconda@v2
      with:
        python-version: '3.8'
        architecture: x64
    - run: conda install nox
    - run: nox
  conda_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
    name: Python ${{ matrix.python-version }} - Testing with conda
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - run: conda install nox
    - run: nox -s test -p ${{ matrix.python-version }}
  poetry_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
    name: Python ${{ matrix.python-version }} - Testing with poetry
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - run: pip install nox
    - run: pip install poetry
    - run: nox -s poetry_test -p ${{ matrix.python-version }}
  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-miniconda@v2
      with:
        python-version: '3.8'
        architecture: x64
        activate-environment: adso
    - run: conda install nox
    - run: nox -s cov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}